<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>編集ページ</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.0/css/bootstrap-reboot.min.css">
        <link type="text/css" rel="stylesheet" href="/css/style.css">
    </head>
    <body>
        <section class="container">
            <div class="mainTitle">
                <h1 class="title">なんでも掲示板</h1>
            </div>
            <!-- ハンバーガーメニュー -->
            <div class="hamburger-menu">
                <input type="checkbox" id="menu-btn-check">
                <label for="menu-btn-check" class="menu-btn"><span></span></label>
                <!--ここからメニュー-->
                <aside class="top-side">
                    <div class="welcome">ようこそ<span class="roginName">ゲスト</span>さん</div>
                    <ul>
                        <li><a href="/createThreadForm">新規スレッドを書く</a></li>
                        <li class="favorite"><a href="/favoriteList">お気に入り一覧</a></li>
                        <li class="roginPage"><a href="/roginForm">ログイン</a></li>
                        <li class="rogoutPage"><a href="/rogout">ログアウト</a></li>
                        <li class="registerUser"><a href="/registerUserForm">新規ユーザー登録</a></li>
                        <li>
                            <div class="qa__head js-ac">掲示板検索</div>
                        </li>
                        <li>
                            <div class="searchInpt">
                                <input id="inputTitle" type="text">
                                <div class="searchIcon">
                                    <img class="magnifyingGlass" src="../image/magnifyingGlass.png" alt="検索アイコン表示" width="20px" height="20px">
                                </div>
                            </div>
                            <div class="add"></div>
                        </li>
                    </ul>
                </aside>
                <!--ここまでメニュー-->
            </div>
            <div class="threadArea">
                <ul class="threadContentArea">
                        <li class="listItem">
                            <div class="userInfo">
                                <span class="userName">
                                    <%= user[0].id %> 名前：<%= user[0].name %>
                                </span>
                                <span class="date">：<%= user[0].date %> </span>
                                <span class="edit"><a href="/edit/<%= user[0].id %>">編集</a></span>
                            </div>
                            <div class="content">
                                <%= user[0].content %>
                            </div>
                        </li>
                </ul>
                <form action="/update/<%= user[0].id %>" method="POST" name="questionnaire">
                    <div class="nameEmail">
                        <div class="inputName">
                            <div class="item"><label for="name">名前</label> </div>
                            <input id="name" type="text" name="name" pattern="^[ぁ-ん一-龥々a-zA-Z\-]+$" value="<%= user[0].name %>" required>
                        </div>
                        <div class="inputEmail">
                            <div class="item"><label for="mail">email</label> </div>
                            <input id="mail" type="text" name="mail" pattern="^[ぁ-ん一-龥々a-zA-Z\-]+$" value="<%= user[0].mail %>" required>
                        </div>
                    </div>
                    <textarea name="content" cols="135" rows="6" required><%= user[0].content %></textarea>
                    <div class="writeBtn"><button type="submit" onclick="validationCheck();">書き込む</button></div>
                </form>
            </div>
        </section>
        <footer>
            <div class="footerText">copy write</div>
        </footer>
        <script>
            let users = JSON.parse('<%= JSON.stringify(users) %>'.replace(/&#34;/g, '"'));
            let rog = JSON.parse('<%= JSON.stringify(rog) %>'.replace(/&#34;/g, '"'));
            let createdThreads = JSON.parse('<%= JSON.stringify(createdThreads) %>'.replace(/&#34;/g, '"'));

            console.log(users)
            console.log(rog)

            // ハンバーガーメニュー内検索ボックスの表示
            const qa = document.querySelector(".js-ac");
            function acToggle() {
                const content = document.querySelector(".searchInpt");
                content.classList.toggle("is-open");
                const qa = this;
                qa.classList.toggle('is-open');
            }
            qa.addEventListener("click", acToggle);

            // ログイン状況の確認
            function roginNameReflection() {
                let roginName = document.querySelector('.roginName');
                let roginPage = document.querySelector('.roginPage');
                let rogoutPage = document.querySelector('.rogoutPage');
                let favorite = document.querySelector('.favorite');
                let registerUser = document.querySelector('.registerUser');
                
                for (i = 0; i < rog.length; i++) {
                    for (j = 0; j < users.length; j++) {
                        if (rog[i].mail === users[j].mail) {
                            roginName.innerHTML = users[j].name;
                            roginPage.style.display = "none";
                            registerUser.style.display = "none";
                            rogoutPage.classList.remove("rogoutPage");
                            favorite.classList.remove("favorite");
                        }
                    }
                }
            }
            window.onload = roginNameReflection();

            //掲示板検索
            function searchTitle() {
                if (inputTitle.value != "") {
                    if (document.querySelector('.addTitles') != null) {
                        while (add.firstChild) {
                            add.removeChild(add.firstChild);
                        }
                    }
                    for (i = 0; i < createdThreads.length; i++) {
                        if (createdThreads[i].title.indexOf(inputTitle.value) > -1) {
                            add.insertAdjacentHTML('beforeend', `
                                    <div class="addTitles"> ${createdThreads[i].title} </div>
                           `)
                        }
                    }
                } else {
                    while (add.firstChild) {
                        add.removeChild(add.firstChild);
                    }
                }
            }
            let searchBtn = document.querySelector('.magnifyingGlass');
            let inputTitle = document.querySelector('#inputTitle');
            let add = document.querySelector(".add");
            searchBtn.addEventListener('click', searchTitle);

        </script>
    </body>
</html>
